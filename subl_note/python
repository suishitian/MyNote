1.python创建变量时不需要声明变量
2.单下划线开头的变量是不能访问的类属性，需要类提供的接口才能访问
  双下划线代表类的私有成员
  前后都有双下划线，表示特殊方法，比如构造函数
3.缩进的空格数必须都相同
4.print默认换行，如果不想换行，可以在结尾加一个,(逗号)
5.类：
  (1)类中的方法的中的第一个参数必须是self。其中这个Self指向的是本类的实例
  (2)类的实例化，不需要new关键，可以通过类名字调用初始化函数
  eg:emp1 = Employee("asdasd",1111)  ----  Employee就只是一个类名
  (3)初始化函数要使用__init__的名称，并且同样第一个参数为self
  (4)可以在外部随意修改类内部的属性（通过emp1.age调用）,在类没有此属性的时候则，在类中新增加这一属性
  (5)关于类的属性的API：
  getattr(obj, name[, default]) : 访问对象的属性。
  hasattr(obj,name) : 检查是否存在一个属性。
  setattr(obj,name,value) : 设置一个属性。如果属性不存在，会创建一个新属性。
  delattr(obj, name) : 删除属性。
  (6)类的内置属性：
  __dict__ : 类的属性（包含一个字典，由类的数据属性组成）
  __doc__ :类的文档字符串
  __name__: 类名
  __module__: 类定义所在的模块（类的全名是'__main__.className'，如果类位于一个导入模块mymod中，那么className.__module__ 等于 mymod）
  __bases__ : 类的所有父类构成元素（包含了一个由所有父类组成的元组）
  (7)析构函数__del__(self)在对象销毁的时候被调用
6.类的继承
  (1)class Chile(Parent1,Parent2)  ----  可以这样用来继承，或者多重继承
  (2)在子类中调用基类方法时候，需要加上基类的类名前缀，再加上self参数变量。
  (3)方法重载，直接在子类中覆写即可。
  (4)常用重载方法：
  __init__ ( self [,args...] )
  构造函数
  简单的调用方法: obj = className(args)
  __del__( self )
  析构方法, 删除一个对象
  简单的调用方法 : del obj
  __repr__( self )
  转化为供解释器读取的形式
  简单的调用方法 : repr(obj)
  __str__( self )
  用于将值转化为适于人阅读的形式
  简单的调用方法 : str(obj)
  __cmp__ ( self, x )
  对象比较
  简单的调用方法 : cmp(obj, x)
  (5)运算符重载：在类中实现
  def __add__(self,other):
      return Vector(self.a + other.a, self.b + other.b)
   print v2+v2  // Vector(7,8)
7.类的私有成员，与私有函数
  (1)私有成员前面加两个下划线，在类的外部不能被调用。在本类方法中需要self.__data进行调用
  (2)私有方法，在方法名前加入两个下划线，不会在方法外被调用
  def __haha():
  (3)私有数据可以通过写一个接口，用来供外界调用
  (4)单下划线开头的函数，表示protected的变量，即本变量只允许本身与其子类使用访问。
8.assert断言：assert后面的表达式为真，则没事，为假则是异常。
9.zip类：总会需要的，需要看一看。